buildscript {
    // 定义变量
    ext {
        ALI_REPOSITORY_URL = "https://maven.aliyun.com/repository/public/"
        springBootVersion = "2.6.3"
        springCloudAlibabaVersion = "2021.1"
        springCloudVersion = "3.1.0"
        okHttpVersion = "4.9.3"
        dubboVersion = "3.0.5"
        zkVersion = "3.7.0"
        swaggerVersion = "2.10.5"
        hutoolVersion = "5.7.20"
        apacheLangVersion = "3.12.0"
        lombokVersion = "1.18.22"
    }
    // 仓库地址
    repositories {
        // 先从阿里云maven仓库中去下载，没有再去maven中央仓库
        maven {
            url ALI_REPOSITORY_URL
        }
        mavenCentral()

    }
    // 构建时所需要的插件或者是其他的依赖
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }

}
// 所有模块的总仓库地址
allprojects {
    // 在build.gradle文件中直接声明的依赖项、仓库地址等信息是项目自身需要的资源。
    repositories {
        maven {
            url ALI_REPOSITORY_URL
        }
    }
}
subprojects {
    apply plugin: 'java'
    apply plugin: 'war';
    apply plugin: 'idea'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    // 指定编码格式
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'
    version = "1.0.0-SNAPSHOT"  // 开发版本： -SNAPSHOT 正式版本：.RELEASE
    dependencies {
        testImplementation("org.springframework.boot:spring-boot-starter-test:$springBootVersion")
        implementation("com.squareup.okhttp3:okhttp:$okHttpVersion")
        implementation 'com.alibaba:fastjson:1.2.79'
        implementation("io.springfox:springfox-swagger-ui:$swaggerVersion")
        implementation("io.springfox:springfox-swagger2:$swaggerVersion")
        implementation("cn.hutool:hutool-all:$hutoolVersion")
        implementation("org.apache.commons:commons-lang3:$apacheLangVersion")
        implementation 'io.github.openfeign:feign-okhttp:11.5'
        runtimeOnly 'org.springframework.cloud:spring-cloud-dependencies:2021.0.0'
        compileOnly("org.projectlombok:lombok:$lombokVersion")
        implementation("org.projectlombok:lombok:$lombokVersion")
        annotationProcessor("org.projectlombok:lombok:$lombokVersion")
    }
    dependencyManagement {
        imports {
            mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaVersion}"
        }
        dependencies {
            dependency("org.apache.dubbo:dubbo-spring-boot-starter:$dubboVersion")
            dependency("org.apache.dubbo:dubbo-dependencies-zookeeper:$dubboVersion")
            dependency("org.apache.dubbo:dubbo:$dubboVersion")
            dependency("org.apache.zookeeper:zookeeper:$zkVersion")
            dependency("org.springframework.cloud:spring-cloud-loadbalancer:$springCloudVersion")
            dependency("org.springframework.cloud:spring-cloud-starter-bootstrap:$springCloudVersion")
            dependency("org.springframework.cloud:spring-cloud-starter-openfeign:$springCloudVersion")
            dependency ("org.springframework.cloud:spring-cloud-starter-gateway:$springCloudVersion")

        }

    }
}

